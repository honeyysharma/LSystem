#ifndef LSYSTEM_H
#define LSYSTEM_H

/// @file LSystem.h
/// @brief basic header file for the LSystem class

#include <string>
#include <vector>

#include "LSystemRule.h"

/// @class LSystem
/// @brief class to store axiom and associated rules and expansion of LSystem.

class LSystem
{
public:

    /// @brief ctor
    LSystem(){}

    /// @brief user defined ctor
    LSystem(const std::string &_axiom, const std::vector<LSystemRule> &_rules);

    /// @brief copy ctor
    LSystem(const LSystem &_LSystem);

    /// @brief dtor
    ~LSystem(){}

    /// @brief called to get the current string generated by LSystem
    inline std::string getCurrentString(){return m_axiom;}

    /// @brief called to expand the axiom according to rules
    /// @parm[in] _numberOfGenerations  the value to set
    void expandGrammar(int _numberofGenerations);

private:

    /// @brief store the axiom or start symbol of LSystem
    std::string m_axiom;

    /// @brief store the rules
    std::vector <LSystemRule> m_rules;
};

#endif // LSYSTEM_H
